diff --git a/oembed.module b/oembed.module
index bfb7bed..e382ece 100644
--- a/oembed.module
+++ b/oembed.module
@@ -164,7 +164,11 @@ function oembed_theme() {
  * Returns the provider for a url.
  *
  * @param string $url
- *  Teh url to get the provider for.
+ *   The url to get the provider for.
+ * @param array $matches
+ *   Array reference for providers that capture arguments from URL.
+ * @param string $role
+ *
  * @return mixed
  *  A valid callback or FALSE
  */
@@ -178,23 +182,33 @@ function oembed_get_provider($url, &$matches, $role = 'consumer') {
   // returns the name of the child plugin that can fulfill the request.
   foreach ($plugins as $plugin) {
 
-    // Plugins will only be checked if they are enabled for the role.
-    if ($plugin[$role] && preg_match($plugin['scheme'], $url, $matches)) {
+    // A plugin with no schemes is effectively disabled.
+    if ($plugin[$role] && !empty($plugin['scheme'])) {
+
+      //remove '#' and '#i' from the begining and end.
+      $scheme = substr($plugin['scheme'], 1, -2);
+      $sub_schemes = explode('|', $scheme);
+
+      foreach ($sub_schemes as $pattern) {
+        // Plugins will only be checked if they are enabled for the role.
+        if (preg_match("#{$pattern}#i", $url, $matches)) {
 
-      // A scheme map is used to match a URL to a specific child plugin.
-      if (!empty($plugin['scheme map'])) {
-        foreach ($plugin['scheme map'] as $id => $scheme) {
-          if (preg_match($scheme, $url, $matches)) {
+          // A scheme map is used to match a URL to a specific child plugin.
+          if (!empty($plugin['scheme map'])) {
+            foreach ($plugin['scheme map'] as $id => $scheme) {
+              if (preg_match($scheme, $url, $matches)) {
 
-            // This forces the 'get child' callback to the loaded.
-            ctools_plugin_get_function($plugin, 'get child');
-            $plugin = ctools_get_plugins('oembed', 'providers', $id);
-            break;
+                // This forces the 'get child' callback to the loaded.
+                ctools_plugin_get_function($plugin, 'get child');
+                $plugin = ctools_get_plugins('oembed', 'providers', $id);
+                break;
+              }
+            }
           }
+
+          return $plugin;
         }
       }
-
-      return $plugin;
     }
   }
   return FALSE;
