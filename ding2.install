<?php
/**
 * @file
 * Setup default theme, shortcuts, roles, language, search and features.
 */

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
function ding2_install() {
  // Set default variables.
  $default_theme = 'ddbasic';
  $admin_theme = 'seven';

  $t = get_t();

  //
  // Disable all themes and only active default and admin themes.
  //
  db_update('system')
    ->fields(array('status' => 0))
    ->condition('type', 'theme')
    ->execute();

  // Enable themes.
  theme_enable(array($default_theme, $admin_theme));

  // Enable $default_theme.
  variable_set('theme_default', $default_theme);

  // Enable $admin_theme.
  variable_set('admin_theme', $admin_theme);

  // Activate admin theme when editing a node.
  variable_set('node_admin_theme', '1');

  //
  // Add shortcuts to the default set on install.
  //
  $shortcut_set = shortcut_set_load(SHORTCUT_DEFAULT_SET_NAME);
  $shortcut_set->links = NULL;
  $shortcut_set->links = array(
    array(
      'link_path' => 'admin/config/regional/translate',
      'link_title' => $t('Translation'),
      'weight' => -17,
    ),
    array(
      'link_path' => 'admin/appearance/settings/ddbasic',
      'link_title' => $t('Theme settings'),
      'weight' => -18,
    ),
    array(
      'link_path' => 'admin/config/user-interface/backgrounds',
      'link_title' => $t('Backgrounds'),
      'weight' => -19,
    ),
  );
  shortcut_set_save($shortcut_set);

  // Set default source language for i18n module.
  variable_set('i18n_string_source_language', 'en');

  // Disable configurable timezones for users.
  variable_set('configurable_timezones', 0);

  // Select the ding_frontpage as front page.
  variable_set('site_frontpage', 'ding_frontpage');

  //
  // Enable ting search as default.
  //

  $active_search = variable_get('search_active_modules', array());
  $search_defaults = array(
    'node' => 'node',
    'ting_search' => 'ting_search',
    'user' => 0,
    'mkdru' => 'mkdru',
  );
  // Avoid overwriting other modules search settings.
  // Search default has precedence
  variable_set('search_active_modules', $search_defaults + $active_search);
  variable_set('search_default_module', 'ting_search');

  //
  // Enable the panel pages for ting objects and search.
  //
  variable_set('ting_ting_object_disabled', FALSE);
  variable_set('ting_ting_collection_disabled', FALSE);
  variable_set('page_manager_search_disabled_ting_search', FALSE);

  //
  // Allow visitor account creation, but with administrative approval.
  //
  variable_set('user_register', USER_REGISTER_ADMINISTRATORS_ONLY);

  // Submit theme settings.
  variable_set('theme_' . $default_theme . '_settings', ding2_theme_settings());
  ding_base_rewrite_color_stylesheet();

  // Disable overlay.
  if (module_exists('overlay')) {
    module_disable(array('overlay'));
  }

  // Ignore any rebuild messages.
  node_access_needs_rebuild(FALSE);

  // Ignore any other install messages.
  drupal_get_messages();

  // Clear caches.
  drupal_flush_all_caches();
}

/**
 * Set default theme setting for ddbasic.
 *
 * @return array
 *   The default theme settings.
 */
function ding2_theme_settings() {
  return array(
    'toggle_logo' => 1,
    'toggle_name' => 1,
    'toggle_slogan' => 0,
    'toggle_node_user_picture' => 0,
    'toggle_comment_user_picture' => 0,
    'toggle_comment_user_verification' => 1,
    'toggle_favicon' => 1,
    'toggle_main_menu' => 1,
    'toggle_secondary_menu' => 1,
    'default_logo' => 1,
    'default_favicon' => 1,
    'latto_classes_menu_leaf' => 1,
    'latto_classes_menu_has_children' => 1,
    'latto_classes_menu_items_mlid' => 1,
    'main_menu_sticky' => 0,
    'load_html5js' => 1,
    'load_selectivizr' => 1,
    'load_scalefixjs' => 1,
    'load_equalize' => 1,
    'libraries_check_all' => 0,
  );
}

/**
 * Update the database with the newest translations.
 */
function ding2_translation_update() {
  // Update build-in translation group.
  $file = new stdClass();
  $file->uri = DRUPAL_ROOT . '/profiles/ding2/translations/da.po';
  $file->filename = basename($file->uri);
  _locale_import_po($file, 'da', LOCALE_IMPORT_KEEP, 'default');

  // Update field translation group.
  $file = new stdClass();
  $file->uri = DRUPAL_ROOT . '/profiles/ding2/translations/fields_da.po';
  $file->filename = basename($file->uri);
  _locale_import_po($file, 'da', LOCALE_IMPORT_KEEP, 'field');

  // Update metatag translation group.
  $file = new stdClass();
  $file->uri = DRUPAL_ROOT . '/profiles/ding2/translations/metatags_da.po';
  $file->filename = basename($file->uri);
  _locale_import_po($file, 'da', LOCALE_IMPORT_KEEP, 'metatag');
}

/**
 * Delete {system} records for a module.
 *
 * This function is to be used when removing a module from the code-base. It's
 * needed because uninstalling a module that don't exists in code is not
 * possible.
 *
 * Remember to run the clean-up that the module had in it's hook_uninstall
 * before calling this function.
 *
 * @see https://www.drupal.org/node/2487215
 */
function ding2_remove_module($module) {
  db_delete('system')
    ->condition('name', $module)
    ->condition('type', 'module')
    ->execute();
}

/**
 * Enable new shortcuts.
 */
function ding2_update_7000() {
  $t = get_t();

  $shortcut_set = shortcut_set_load(SHORTCUT_DEFAULT_SET_NAME);

  $shortcut_set->links[] = array(
    'link_path' => 'admin/appearance/settings/ddbasic',
    'link_title' => $t('Theme settings'),
    'weight' => -18,
  );
  $shortcut_set->links[] = array(
    'link_path' => 'admin/config/user-interface/backgrounds',
    'link_title' => $t('Backgrounds'),
    'weight' => -19,
  );

  shortcut_set_save($shortcut_set);

  return array();
}

/**
 * Append default ddbasic theme settings.
 */
function ding2_update_7001() {
  module_load_include('inc', 'system', 'system.admin');
  $form_state = form_state_defaults();
  $form_state['build_info']['args'][0] = 'ddbasic';
  $form_state['values'] = array();
  $form_state['values']['scheme'] = 'classic';
  drupal_form_submit('system_theme_settings', $form_state);
}

/**
 * Import our own translations.
 */
function ding2_update_7002() {
  ding2_translation_update();
}

/**
 * Enable and configure the cookie module.
 */
function ding2_update_7003() {
  module_enable(array('cookiecontrol'));
  ding2_set_cookie_page();
}

/**
 * Update our own translations.
 */
function ding2_update_7004() {
  // Fixed month translation.
  ding2_translation_update();
}

/**
 * Enable and configure SSL proxy variables.
 */
function ding2_update_7005() {
  module_enable(array('sslproxy'), TRUE);
  variable_set('sslproxy_var', 'X-FORWARDED-PROTO');
  variable_set('sslproxy_var_value', 'https');
}

/**
 * Add "administrators" role to admin user.
 */
function ding2_update_7006() {
  ding2_add_administrators_role(1);
}

/**
 * Update our own translations.
 */
function ding2_update_7007() {
  // Fixed month translation.
  ding2_translation_update();
}

/**
 * Enable view unpublished module.
 */
function ding2_update_7008() {
  module_enable(array('view_unpublished'), TRUE);
}

/**
 * Enable redirect module.
 */
function ding2_update_7009() {
  module_enable(array('redirect'));
}

/**
 * Disable the cookiecontrol module.
 * Enable and configure the eu-cookie-compliance module.
 */
function ding2_update_7010() {
  if (module_exists('cookiecontrol')) {
    module_disable(array('cookiecontrol'));
    drupal_uninstall_modules(array('cookiecontrol'));
    variable_del('cookiecontrol_privacynode');
    variable_del('cookiecontrol_text');
    variable_del('cookiecontrol_fulltext');
  }
  module_enable(array('eu_cookie_compliance'));
  ding2_set_cookie_page();
  if (module_exists('secure_permissions')) {
    secure_permissions_build_permissions();
  }
}

/**
 * Enable maintenance_mode_api module.
 */
function ding2_update_7011() {
  module_enable(array('maintenance_mode_api'));
}

/**
 * Update the eu-cookie-compliance Danish "No thanks" text to "Læs mere".
 */
function ding2_update_7012() {
  $eu_cookie_compliance_da = variable_get('eu_cookie_compliance_da');
  $eu_cookie_compliance_da['popup_disagree_button_message'] = 'Læs mere';
  variable_set('eu_cookie_compliance_da', $eu_cookie_compliance_da);
}

/**
 * Update our own translations.
 */
function ding2_update_7013() {
  ding2_translation_update();
}

/**
 * Enable pagepreview module.
 */
function ding2_update_7014() {
  module_enable(array('pagepreview'));
}

/**
 * Enable search_api modules.
 */
function ding2_update_7015() {
  module_enable(array('search_api', 'search_api_multi', 'search_api_db', 'search_api_views'));
}

/**
 * Update our own translations.
 */
function ding2_update_7016() {
  ding2_translation_update();
}

/**
 * Update our own translations.
 */
function ding2_update_7017() {
  ding2_translation_update();
}

/**
 * Update our own translations.
 */
function ding2_update_7018() {
  ding2_translation_update();
}

/**
 * Disable overlay.
 */
function ding2_update_7019() {
  if (module_exists('overlay')) {
    module_disable(array('overlay'));
  }
}

/**
 * Enable metatag and metatag_panels modules.
 */
function ding2_update_7020() {
  module_enable(array('metatag', 'metatag_panels'));
}

/**
 * Disable ding_bookmark module.
 */
function ding2_update_7021() {
  module_disable(array('ding_bookmark'));
}

/**
 * Enable P2 installer module.
 */
function ding2_update_7022() {
  module_enable(array('ding_p2_installer'));
}

/**
 * Enable admin_menu modules.
 */
function ding2_update_7023() {
  module_enable(array('admin_menu', 'admin_menu_toolbar'));

  ding2_admin_menu_shortcuts();
}

/**
 * Enable htmlmail module.
 */
function ding2_update_7024() {
  module_enable(array('htmlmail'));
}

/**
 * Enable environment indicator panel modules.
 */
function ding2_update_7025() {
  if (module_exists('ddb_cp')) {
    module_enable(array('environment_indicator'));
  }
}

/**
 * Enable mmeu module.
 */
function ding2_update_7026() {
  module_enable(array('mmeu'));
}

/**
 * Enable lazy_pane module.
 */
function ding2_update_7027() {
  module_enable(array('lazy_pane'));
}

/**
 * Update our own translations.
 */
function ding2_update_7028() {
  ding2_translation_update();
}

/**
 * Update our own translations.
 */
function ding2_update_7029() {
  ding2_translation_update();
}

/**
 * Update our own translations.
 */
function ding2_update_7030() {
  ding2_translation_update();
}

/**
 * Update our own translations.
 */
function ding2_update_7031() {
  ding2_translation_update();
}

/**
 * Enable Campaign module.
 */
function ding2_update_7032() {
  module_enable(array('ding_campaign'));
}

/**
 * Enable Mobilesearch module.
 */
function ding2_update_7034() {
  module_enable(array('ding_mobilesearch'));
}

/**
 * Set default variables for MobileSearch.
 */
function ding2_update_7035() {
  $default_mobilesearch_agencyid = variable_get('ting_agency');
  $mobilesearch_rest_key = variable_get('mobilesearch_rest_key', NULL);
  variable_set('mobilesearch_rest_url', 'https://cmscontent.dbc.dk/');
  variable_set('mobilesearch_rest_agency_id', $default_mobilesearch_agencyid);
  if (empty($mobilesearch_rest_key)) {
    variable_set('mobilesearch_rest_key', $default_mobilesearch_agencyid . "DDBCMS");
  }
}

/**
 * Update our own translations.
 */
function ding2_update_7036() {
  ding2_translation_update();
}

/**
 * Update our own translations.
 */
function ding2_update_7037() {
  ding2_translation_update();
}

/**
 * Update our own translations.
 */
function ding2_update_7038() {
  ding2_translation_update();
}

/**
 * Enable E-resource module.
 */
function ding2_update_7039() {
  module_enable(array('ding_eresource'));
}

/**
 * Update our own translations.
 */
function ding2_update_7040() {
  ding2_translation_update();
}

/**
 * Delete {system} records for ting_carousel modules.
 */
function ding2_update_7041() {
  ding2_remove_module('ting_carousel');
}
