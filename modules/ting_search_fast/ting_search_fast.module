<?php

use Ting\TingObjectCollectionInterface;
use Ting\TingObjectInterface;

function ting_search_fast_theme($existing, $type, $theme, $path) {
  return array(
    'ting_search_fast_item' => array(
      'variables' => array(
        'title' => NULL,
        'creators' => NULL,
        'abstract' => NULL,
        'cover' => NULL,
        'series' => NULL,
        'types' => NULL,
      ),
      'template' => 'ting-search-fast-item',
      'path' => $path . '/templates',
    ),
    'ting_search_fast_series' => array(
      'variables' => array(
        'cover' => NULL,
        'series' => NULL,
      ),
      'template' => 'ting-search-fast-series',
      'path' => $path . '/templates',
    ),
  );
}

/**
 * Implements hook_theme_registry_alter().
 */
function ting_search_fast_theme_registry_alter(&$theme_registry) {
  $theme_registry['ting_search_collection_snippet']['function'] = 'ting_search_fast_ting_search_collection_snippet';
}

function ting_search_fast_ting_search_collection_snippet(array $variables) {
  /* @var \Ting\TingObjectCollectionInterface $collection */
  $collection = $variables['collection'];

  return [
    '#theme' => 'ting_search_fast_item',
    '#title' => theme('ting_title',
      [
        'collection' => $collection,
        'uri' => [
          'path' => ting_search_fast_collection_path($collection),
          'options' => [],
        ],
        'prefix_type' => TRUE,
      ]
    ),
    '#creators' => ting_search_fast_get_creators($collection),
    '#cover' => ting_search_fast_get_cover($collection),
    '#abstract' => ting_search_fast_get_abstract($collection),
    '#series' => ting_search_fast_get_series($collection),
    '#types' => ting_search_fast_get_types($collection),
    '#attached' => [
      'js' => [ drupal_get_path('module', 'ting_covers') . '/js/ting-covers.js' ]
    ]
  ];
}

function ting_search_fast_get_creators(TingObjectCollectionInterface $collection) {
  $search_string = variable_get('ting_search_register_author', 'phrase.creator="@author"');
  $creators = $collection->getPrimaryObject()->getCreators();

  $creator_links = array();
  foreach ($creators  as $creator) {
    $creator_links[] = ting_field_search_link($creator, $search_string, array('@author' => $creator), array(
      'attributes' => array(
        'class' => array('author'),
      ),
    ));
  }
  $date = $collection->getPrimaryObject()->getYear();
  $markup_string = '';
  if (count($creators)) {
    if ($date  != '') {
      $markup_string = t('By !author_link (@year)', array(
        '!author_link' => implode(', ', $creator_links),
        // So wrong, but appears to be the way the data is.
        '@year' => $date ,
      ));
    } else {
      $markup_string = t('By !author_link', array(
        '!author_link' => implode(', ', $creator_links),
      ));
    }
  } elseif ($date  != '') {
    $markup_string = t('(@year)', array('@year' => $date ));
  }
  return $markup_string;
}

function ting_search_fast_get_abstract(TingObjectCollectionInterface $collection) {
  return add_ellipsis($collection->getPrimaryObject()->getAbstract(), 330);
}

function ting_search_fast_get_cover(TingObjectCollectionInterface $collection) {
  $object = $collection->getPrimaryObject();
  $genericObject = new stdClass();
  $genericObject->id = $object->getId();
  $genericObject->title = $object->getShortTitle();
  $genericObject->creators = $object->getCreators();
  $image = theme('ting_object_cover', array('elements' => array('#object' => $genericObject, '#image_style' => 'ding_list_medium')));
  $options = array(
    'html' => TRUE,
    'attributes' => array('title' => $object->getShortTitle()),
  );
  $image = '<div id="ting-object-ting-object-search-result-group-ting-left-col-search" class="ting-object-left group-ting-left-col-search field-group-div field-group-format group-ting-left-col-search">' . $image . '</div>';
  return l($image, ting_search_fast_collection_path($collection), $options);
}

function ting_search_fast_get_series(TingObjectCollectionInterface $collection) {
  $markup = '';

  $series = ting_field_series($collection->getPrimaryObject());
  if (!empty($series)) {
    $markup = theme('ting_search_fast_series', array('series' => drupal_render($series)));
  }
  return $markup;
}

function ting_search_fast_get_types(TingObjectCollectionInterface $collection) {
  // Sort entities into type -> objects.
  $type_object_map = array();
  foreach ($collection->getObjects() as $object) {
    $type_object_map[$object->getType()][] = $object;
  }

  return array_map(function(array $objects, $type) use ($collection) {
    if (count($objects) == 1) {
      $url = ting_search_fast_object_path($objects[0]);
    } else {
      $url = ting_search_fast_collection_path($collection);
    }
    return l($type, $url);
  }, $type_object_map, array_keys($type_object_map));
}

function ting_search_fast_collection_path(TingObjectCollectionInterface $collection) {
  return 'ting/collection/' . $collection->getPrimaryObject()->getId();
}

function ting_search_fast_object_path(TingObjectInterface $object) {
  return 'ting/object/' . $object->getId();
}
