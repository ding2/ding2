<?php

use Ting\TingObjectCollectionInterface;
use Ting\TingObjectInterface;

function ting_search_fast_theme($existing, $type, $theme, $path) {
  return array(
    'ting_search_fast_item' => array(
      'variables' => array(
        'title' => NULL,
        'creators' => NULL,
        'abstract' => NULL,
        'cover' => NULL,
        'series' => NULL,
        'types' => NULL,
      ),
      'template' => 'ting-search-fast-item',
      'path' => $path . '/templates',
    ),
  );
}

/**
 * Implements hook_theme_registry_alter().
 */
function ting_search_fast_theme_registry_alter(&$theme_registry) {
  $theme_registry['ting_search_collection_snippet']['function'] = 'ting_search_fast_ting_search_collection_snippet';
}

function ting_search_fast_ting_search_collection_snippet(array $variables) {
  /* @var \Ting\TingObjectCollectionInterface $collection */
  $collection = $variables['collection'];
  $object = $collection->getPrimaryObject();

  return [
    '#theme' => 'ting_search_fast_item',
    '#title' => theme('ting_title',
      [
        'collection' => $collection,
        'uri' => [
          'path' => ting_search_fast_collection_path($collection),
          'options' => [],
        ],
        'prefix_type' => TRUE,
      ]
    ),
    '#creators' => theme('ting_creators',
      [
        'object' => $object
      ]
    ),
    '#cover' => ting_search_fast_get_cover($collection),
    '#abstract' => theme('ting_abstract',
      [
        'object' => $object,
        'max_length' => 120
      ]
    ),
    '#series' => theme('ting_series',
      [
        'object' => $object
      ]
    ),
    '#types' => ting_search_fast_get_types($collection),
    '#attached' => [
      'js' => [ drupal_get_path('module', 'ting_covers') . '/js/ting-covers.js' ]
    ]
  ];
}

function ting_search_fast_get_types(TingObjectCollectionInterface $collection) {
  // Sort entities into type -> objects.
  $type_object_map = array();
  foreach ($collection->getObjects() as $object) {
    $type_object_map[$object->getType()][] = $object;
  }

  return array_map(function(array $objects, $type) use ($collection) {
    if (count($objects) == 1) {
      $url = ting_search_fast_object_path($objects[0]);
    } else {
      $url = ting_search_fast_collection_path($collection);
    }
    return l($type, $url);
  }, $type_object_map, array_keys($type_object_map));
}

function ting_search_fast_collection_path(TingObjectCollectionInterface $collection) {
  return 'ting/collection/' . $collection->getPrimaryObject()->getId();
}

function ting_search_fast_object_path(TingObjectInterface $object) {
  return 'ting/object/' . $object->getId();
}
