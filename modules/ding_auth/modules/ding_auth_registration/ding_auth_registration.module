<?php
/**
 * @file
 * Handle user self registration.
 */

define('DING_AUTH_REGISTRATION_INFORMATION_URL', 'ding_auth/registration');
define('DING_AUTH_REGISTRATION_ACCEPTANCE_URL', 'ding_auth/registration/acceptance');
define('DING_AUTH_REGISTRATION_SUCCESS_URL', 'ding_auth/registration/success');

/**
 * Implements hook_menu().
 */
function ding_auth_registration_menu() {
  $items = array();

  $items['admin/config/ding/auth/registration'] = array(
    'title' => 'Registration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ding_auth_registration_admin_settings_form'),
    'access arguments' => array('administer users'),
    'file' => 'includes/ding_auth_registration.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );

  $items[DING_AUTH_REGISTRATION_INFORMATION_URL] = array(
    'page callback' => 'ding_auth_registration_information',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $items[DING_AUTH_REGISTRATION_ACCEPTANCE_URL] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ding_auth_registration_acceptance_form'),
    'access callback' => 'ding_auth_registration_acceptance_access_check',
    'file' => 'includes/ding_auth_registration.acceptance.inc',
    'type' => MENU_CALLBACK,
  );

  $items[DING_AUTH_REGISTRATION_SUCCESS_URL] = array(
    'page callback' => 'ding_auth_registration_success',
    'access callback' => 'user_is_logged_in',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Check that the right data is set in the current session.
 *
 * The acceptance page should not be accessible if the user have not logged in
 * using auth.
 *
 * @return bool
 *   TRUE if values exists in the session else FALSE.
 */
function ding_auth_registration_acceptance_access_check() {
  return isset($_SESSION['oauth2userinfo']);
}

/**
 * Implements hook_theme().
 */
function ding_auth_registration_theme($existing, $type, $theme, $path) {
  return array(
    'ding_auth_registration' => array(
      'template' => 'ding-auth-registration',
      'variables' => array(
        'title' => array(),
        'content' => array(),
        'link' => NULL,
      ),
      'path' => $path . '/templates',
    ),
    'ding_auth_registration_success' => array(
      'template' => 'ding-auth-registration-success',
      'variables' => array(
        'title' => array(),
        'content' => array(),
      ),
      'path' => $path . '/templates',
    ),
    'ding_auth_registration_acceptance' => array(
      'render element'  => 'element',
      'template' => 'templates/ding-auth-acceptance'
    ),
  );
}

/**
 * Generate render array for the information page.
 *
 * @return array
 *   Render array with the page content.
 */
function ding_auth_registration_information() {
  $config = _ding_auth_registration_config();

  // Set page title to the same as the pages headline.
  drupal_set_title($config['information']['title']);

  return array(
    '#theme' => 'ding_auth_registration',
    '#title' => $config['information']['title'],
    '#content' => $config['information']['content']['value'],
    '#link' => array(
      '#theme' => 'link',
      '#text' => $config['information']['link'],
      '#path' => DING_AUTH_LOGIN_URL,
      '#options' => array(
        'attributes' => array(
          // This class "form-submit" is used to make the link look and behave
          // link a button.
          'class' => array(
            'form-submit',
            'ding-auth-link',
            'action-button',
          ),
        ),
        'query' => array(
          'destination' => DING_AUTH_REGISTRATION_ACCEPTANCE_URL,
          'idp' => 'nemid',
        ),
        'html' => TRUE,
      ),
    ),
  );
}

/**
 * Render the success page displayed after self registration.
 *
 * @return array
 *   Render array with the page to display.
 */
function ding_auth_registration_success() {
  $config = _ding_auth_registration_config();

  return array(
    '#theme' => 'ding_auth_registration_success',
    '#title' => $config['success']['title'],
    '#content' => $config['success']['content']['value'],
  );
}

/**
 * Implements hook_ding_provider_user().
 */
function ding_auth_registration_ding_provider_user() {
  return array(
    'user' => array(
      'required' => TRUE,
      'install time setup' => FALSE,
    ),
  );
}

/**
 * Check that the age limit is met.
 *
 * @param int $cpr
 *   A social security number.
 *
 * @return bool
 *   If the age limit is given and met TRUE else FALSE. If age limit is not
 *   given TRUE will always be returned.
 */
function _ding_auth_registration_is_age_limit_met($cpr) {
  $config = _ding_auth_registration_config();

  // Check if age limit should be set.
  $limit = $config['age_limit'];
  if (!empty($limit)) {

    // Magic function to get the 1900, 1800 or 2000 prefixes for year.
    // @see http://da.wikipedia.org/wiki/CPR-nummer
    $year = substr($cpr, 4, 2);
    switch (substr($cpr, 6, 1)) {
      case 0:
      case 1:
      case 2:
      case 3:
        $year = '19' . $year;
        break;

      case 4:
      case 9:
        $year = $year > 36 ? '19' . $year : '20' . $year;
        break;

      case 5:
      case 6:
      case 7:
      case 8:
        $year = $year > 57 ? '18' . $year : '20' . $year;
        break;
    }

    // Create date time object to use it's diff method. The 'tomorrow' is used
    // here to ensure that the user meets the age limit on the person birthday.
    $from = new DateTime();
    $from->setDate($year, substr($cpr, 2, 2), substr($cpr, 0, 2));
    $to = new DateTime('tomorrow');

    // Check if limit have been reached.
    if ($from->diff($to)->y < $limit) {
      return FALSE;
    }
  }

  return TRUE;
}

/**
 * Load self registration configuration with valid defaults.
 */
function _ding_auth_registration_config() {
  // Load default information text from file. This text is pre-approved by DDB.
  $info_text = file_get_contents(drupal_get_path('module', 'ding_auth_registration') . '/ding_auth_registration_text.html');

  return variable_get('ding_auth_registration', array()) + array(
    'age_limit' => 18,
    'information' => array(
      'title' => t('Self registration'),
      'content' => array(
        'value' => $info_text,
        'format' => 'ding_wysiwyg',
      ),
      'link' => t('Start self registration'),
    ),
    'acceptance' => array(
      'description' => array(
        'value' => t("I accept the library's regulations and rules."),
        'format' => 'ding_wysiwyg',
      ),
    ),
    'success' => array(
      'title' => t('Success'),
      'content' => array(
        'value' => t('You have been registered at the library as an user.'),
        'format' => 'ding_wysiwyg',
      ),
    ),
  );
}

/**
 * Check if the request is for self registration.
 *
 * @return bool
 *   TRUE if the destination in the session is correct else FALSE.
 */
function ding_auth_registration_is_registration_request() {
  return isset($_SESSION['oauth2destination']) && $_SESSION['oauth2destination'] == DING_AUTH_REGISTRATION_ACCEPTANCE_URL;
}
