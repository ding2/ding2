<?php

/**
 * @file
 * Term panel variant generator.
 */

/**
 * Implements hook_term_insert().
 *
 * Act when a term is created and trigger panel variant creation.
 */
function ding_sections_term_panel_taxonomy_term_insert($term) {
  if ($term->vocabulary_machine_name == 'section') {
    $term_page = field_get_items('taxonomy_term', $term, 'field_term_page');
    if ($term_page[0]['value'] == 1) {
      ding_sections_term_panel_create_term_variant($term);
    }
  }
}

/**
 * Implements hook_taxonomy_term_update().
 */
function ding_sections_term_panel_taxonomy_term_update($term) {
  if ($term->vocabulary_machine_name == 'section') {
    $term_page = field_get_items('taxonomy_term', $term, 'field_term_page');
    $term_page_old = field_get_items('taxonomy_term', $term->original, 'field_term_page');

    // When unchecked.
    if (($term_page[0]['value'] - $term_page_old[0]['value']) == -1) {
      // Get page.
      $page = 'term_view';
      $page = page_manager_get_page_cache($page);
      // @see page_manager.admin.inc
      if (!empty($page->handler_info['term_view_panel_context_tid_' . $term->tid])) {
        $page->handler_info['term_view_panel_context_tid_' . $term->tid]['disabled'] = TRUE;
        $page->handler_info['term_view_panel_context_tid_' . $term->tid]['changed'] |= PAGE_MANAGER_CHANGED_STATUS;
      }
      if ($function = ctools_plugin_get_function($page->subtask, 'enable callback')) {

        $result = $function($page, FALSE);
        menu_rebuild();
        page_manager_save_page_cache($page);
      }
    }
    // When checked.
    elseif (($term_page[0]['value'] - $term_page_old[0]['value']) == 1) {

      // We have 2 variants:
      // 1) handler exists then just enable him;
      // 2) we should create new variant.
      $page = 'term_view';
      $task = page_manager_get_task($page);
      ctools_get_plugins('page_manager', 'task_handlers', 'panel_context');
      $handlers = page_manager_load_sorted_handlers($task, '', FALSE);
      $handler_name = 'term_view_panel_context_tid_' . $term->tid;
      $handler = isset($handlers[$handler_name]) ? $handlers[$handler_name] : NULL;
      // Enable handler.
      if (!empty($handler)) {
        $page = 'term_view';
        $page = page_manager_get_page_cache($page);
        $page->handler_info['term_view_panel_context_tid_' . $term->tid]['disabled'] = FALSE;
        $page->handler_info['term_view_panel_context_tid_' . $term->tid]['changed'] |= PAGE_MANAGER_CHANGED_STATUS;

        if ($function = ctools_plugin_get_function($page->subtask, 'enable callback')) {
          $result = $function($page, FALSE);
          menu_rebuild();
          page_manager_save_page_cache($page);
        }
      }
      // Create new handler.
      else {
        ding_sections_term_panel_create_term_variant($term);
      }
    }
  }
}

/**
 * Get the exported default handler.
 */
function ding_sections_term_panel_get_handler() {
  $handler = new stdClass();
  $handler->disabled = FALSE; /* Edit this to true to make a default handler disabled initially */
  $handler->api_version = 1;
  $handler->name = 'term_section_panel_context';
  $handler->task = 'term_view';
  $handler->subtask = '';
  $handler->handler = 'panel_context';
  $handler->weight = 4;
  $handler->conf = array(
    'title' => 'Ding section (template)',
    'no_blocks' => 0,
    'pipeline' => 'ipe',
    'body_classes_to_remove' => '',
    'body_classes_to_add' => '',
    'css_id' => '',
    'css' => '',
    'contexts' => array(),
    'relationships' => array(),
    'name' => '',
    'access' => array(
      'plugins' => array(
        0 => array(
          'name' => 'perm',
          'settings' => array(
            'perm' => 'view section panels terms',
          ),
          'context' => 'logged-in-user',
          'not' => FALSE,
        ),
        1 => array(
          'name' => 'entity_bundle:taxonomy_term',
          'settings' => array(
            'type' => array(
              'section' => 'section',
            ),
          ),
          'context' => 'argument_term_1',
          'not' => FALSE,
        ),
      ),
      'logic' => 'and',
    ),
  );
  $display = new panels_display();
  $display->layout = 'ding_layout_1';
  $display->layout_settings = array();
  $display->panel_settings = array(
    'style_settings' => array(
      'default' => NULL,
      'left_sidebar' => NULL,
      'main_content' => NULL,
      'right_sidebar' => NULL,
      'attachment_4_1' => NULL,
      'attachment_4_2' => NULL,
      'attachment_4_3' => NULL,
      'attachment_4_4' => NULL,
      'attachment_3_1' => NULL,
      'attachment_3_2' => NULL,
      'attachment_3_3' => NULL,
      'attachment_2_1' => NULL,
      'attachment_2_2' => NULL,
      'attachment_1_1' => NULL,
    ),
  );
  $display->cache = array();
  $display->title = '';
  $display->uuid = '994da143-c0f6-4401-a343-6ea3981a6834';
  $display->content = array();
  $display->panels = array();
  $pane = new stdClass();
  $pane->pid = 'new-5ec732fb-e7c6-4159-9756-c60f900a1966';
  $pane->panel = 'primary';
  $pane->type = 'block';
  $pane->subtype = 'menu_block-3';
  $pane->shown = TRUE;
  $pane->access = array();
  $pane->configuration = array(
    'override_title' => 0,
    'override_title_text' => '',
    'override_title_heading' => 'h2',
  );
  $pane->cache = array();
  $pane->style = array(
    'settings' => NULL,
  );
  $pane->css = array();
  $pane->extras = array();
  $pane->position = 0;
  $pane->locks = array();
  $pane->uuid = '5ec732fb-e7c6-4159-9756-c60f900a1966';
  $display->content['new-5ec732fb-e7c6-4159-9756-c60f900a1966'] = $pane;
  $display->panels['primary'][0] = 'new-5ec732fb-e7c6-4159-9756-c60f900a1966';
  $pane = new stdClass();
  $pane->pid = 'new-b6007e5d-7a40-48fd-94f0-9e88afacb85d';
  $pane->panel = 'primary';
  $pane->type = 'block';
  $pane->subtype = 'menu_block-4';
  $pane->shown = TRUE;
  $pane->access = array();
  $pane->configuration = array(
    'override_title' => 0,
    'override_title_text' => '',
    'override_title_heading' => 'h2',
  );
  $pane->cache = array();
  $pane->style = array(
    'settings' => NULL,
  );
  $pane->css = array();
  $pane->extras = array();
  $pane->position = 1;
  $pane->locks = array();
  $pane->uuid = 'b6007e5d-7a40-48fd-94f0-9e88afacb85d';
  $display->content['new-b6007e5d-7a40-48fd-94f0-9e88afacb85d'] = $pane;
  $display->panels['primary'][1] = 'new-b6007e5d-7a40-48fd-94f0-9e88afacb85d';
  $pane = new stdClass();
  $pane->pid = 'new-21812a33-baf5-462c-856c-baaa99916d1a';
  $pane->panel = 'primary';
  $pane->type = 'campaign';
  $pane->subtype = 'campaign';
  $pane->shown = TRUE;
  $pane->access = array();
  $pane->configuration = array(
    'ding_campaign_count' => 3,
    'ding_campaign_offset' => 0,
    'ding_campaign_image_style' => 'ding_campaign_p_25',
    'context' => array(
      0 => 'empty',
      1 => 'empty',
      2 => 'argument_string_1',
      3 => 'argument_term_1',
    ),
    'override_title' => 0,
    'override_title_text' => '',
    'override_title_heading' => 'h2',
  );
  $pane->cache = array();
  $pane->style = array(
    'settings' => NULL,
  );
  $pane->css = array();
  $pane->extras = array();
  $pane->position = 2;
  $pane->locks = array();
  $pane->uuid = '21812a33-baf5-462c-856c-baaa99916d1a';
  $display->content['new-21812a33-baf5-462c-856c-baaa99916d1a'] = $pane;
  $display->panels['primary'][2] = 'new-21812a33-baf5-462c-856c-baaa99916d1a';
  $pane = new stdClass();
  $pane->pid = 'new-412d46e4-a2cc-41f9-8e20-92c2f46a2d91';
  $pane->panel = 'primary';
  $pane->type = 'term_description';
  $pane->subtype = 'term_description';
  $pane->shown = TRUE;
  $pane->access = array();
  $pane->configuration = array(
    'context' => 'argument_term_1',
    'override_title' => 0,
    'override_title_text' => '',
    'override_title_heading' => 'h2',
  );
  $pane->cache = array();
  $pane->style = array(
    'settings' => NULL,
  );
  $pane->css = array();
  $pane->extras = array();
  $pane->position = 3;
  $pane->locks = array();
  $pane->uuid = '412d46e4-a2cc-41f9-8e20-92c2f46a2d91';
  $display->content['new-412d46e4-a2cc-41f9-8e20-92c2f46a2d91'] = $pane;
  $display->panels['primary'][3] = 'new-412d46e4-a2cc-41f9-8e20-92c2f46a2d91';
  $pane = new stdClass();
  $pane->pid = 'new-a0e9bca1-3d2c-4bfe-8be2-74e27b10662f';
  $pane->panel = 'primary';
  $pane->type = 'ding_nodelist';
  $pane->subtype = 'ding_nodelist';
  $pane->shown = TRUE;
  $pane->access = array();
  $pane->configuration = array(
    'list_type' => 'all',
    'title_length' => 25,
    'body_length' => 100,
    'dynamic_switch' => 0,
    'nodes_switch' => 0,
    'autoscroll_delay' => NULL,
    'content_filter_promoted' => 0,
    'content_type' => 'ding_news',
    'limit' => '5',
    'more_links' => array(),
    'override_title_text' => '',
    'selected_nodes' => array(),
    'sort_field' => 'created',
    'sort_order' => 'asc',
    'taxonomy_filters' => array(),
    'unique_id' => 'pane-14586533037274',
    'widget_type' => 'taxonomy',
    'item_template' => 'ding_nodelist.ding_news.taxonomy',
  );
  $pane->cache = array(
    'method' => 'simple',
    'settings' => array(
      'lifetime' => '1800',
      'granularity' => 'context',
    ),
  );
  $pane->style = array(
    'settings' => NULL,
  );
  $pane->css = array();
  $pane->extras = array();
  $pane->position = 4;
  $pane->locks = array();
  $pane->uuid = 'a0e9bca1-3d2c-4bfe-8be2-74e27b10662f';
  $display->content['new-a0e9bca1-3d2c-4bfe-8be2-74e27b10662f'] = $pane;
  $display->panels['primary'][4] = 'new-a0e9bca1-3d2c-4bfe-8be2-74e27b10662f';
  $pane = new stdClass();
  $pane->pid = 'new-06f29ebd-d3e8-4cda-ae6d-59a1352c0513';
  $pane->panel = 'primary';
  $pane->type = 'ding_nodelist';
  $pane->subtype = 'ding_nodelist';
  $pane->shown = TRUE;
  $pane->access = array();
  $pane->configuration = array(
    'list_type' => 'all',
    'title_length' => 25,
    'body_length' => 100,
    'dynamic_switch' => 0,
    'nodes_switch' => 0,
    'autoscroll_delay' => '4000',
    'content_filter_promoted' => 0,
    'content_type' => 'ding_event',
    'limit' => '3',
    'more_links' => array(),
    'override_title_text' => NULL,
    'selected_nodes' => array(),
    'sort_field' => 'event_date',
    'sort_order' => 'asc',
    'taxonomy_filters' => array(),
    'unique_id' => 'pane-14586533330693',
    'widget_type' => 'horizontal_accordion',
    'item_template' => 'ding_nodelist.ding_event.haccordeon',
  );
  $pane->cache = array(
    'method' => 'simple',
    'settings' => array(
      'lifetime' => '1800',
      'granularity' => 'context',
    ),
  );
  $pane->style = array(
    'settings' => NULL,
  );
  $pane->css = array();
  $pane->extras = array();
  $pane->position = 5;
  $pane->locks = array();
  $pane->uuid = '06f29ebd-d3e8-4cda-ae6d-59a1352c0513';
  $display->content['new-06f29ebd-d3e8-4cda-ae6d-59a1352c0513'] = $pane;
  $display->panels['primary'][5] = 'new-06f29ebd-d3e8-4cda-ae6d-59a1352c0513';
  $pane = new stdClass();
  $pane->pid = 'new-26fd3d8e-cbda-4db9-95f4-cae6552ad1ba';
  $pane->panel = 'primary';
  $pane->type = 'ding_item_list';
  $pane->subtype = 'ding_item_list';
  $pane->shown = TRUE;
  $pane->access = array();
  $pane->configuration = array(
    'item_list_item_list_custom_title' => 'Related materials',
    'item_query' => 'uu=nt',
    'item_count' => '5',
    'item_sort' => '',
  );
  $pane->cache = array();
  $pane->style = array(
    'settings' => NULL,
  );
  $pane->css = array();
  $pane->extras = array();
  $pane->position = 6;
  $pane->locks = array();
  $pane->uuid = '26fd3d8e-cbda-4db9-95f4-cae6552ad1ba';
  $display->content['new-26fd3d8e-cbda-4db9-95f4-cae6552ad1ba'] = $pane;
  $display->panels['primary'][6] = 'new-26fd3d8e-cbda-4db9-95f4-cae6552ad1ba';
  $display->hide_title = PANELS_TITLE_FIXED;
  $display->title_pane = 'new-5ec732fb-e7c6-4159-9756-c60f900a1966';
  $handler->conf['display'] = $display;

  return $handler;
}

/**
 * Create a panel variant based on the node created.
 */
function ding_sections_term_panel_create_term_variant($term) {
  if (!is_object($term) || !isset($term->tid)) {
    return FALSE;
  }

  // Normally, panels do not support specific panel to node id mapping,
  // so, use php code instead.
  $tid = $term->tid;
  $php_code = '$item = menu_get_object(\'taxonomy_term\', 2); if (!empty($item->tid) && $item->tid == ' . $tid . ') {return TRUE;} return FALSE;';
  $php_filter = array(
    'name' => 'php',
    'settings' => array(
      'description' => t('Term being viewed has tid "@tid"', array('@tid' => $tid)),
      'php' => $php_code,
    ),
    'not' => FALSE,
  );

  $handler_name = 'term_view_panel_context_tid_' . $tid;
  $variant_title = t('Sections term (@term)', array('@term' => $term->name));
  $pipeline = module_exists('panels_ipe') ? 'ipe' : 'standard';

  $handler = ding_sections_term_panel_get_handler();
  $handler->name = $handler_name;
  $handler->did = NULL;
  $handler->conf['title'] = $variant_title;
  $handler->conf['pipeline'] = $pipeline;
  $handler->conf['access']['plugins'][] = $php_filter;
  $handler->weight = -50;

  page_manager_save_task_handler($handler);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ding_sections_term_panel_form_taxonomy_form_term_alter(&$form, &$form_state, $form_id) {
  if (!isset($form['#bundle']) || $form['#bundle'] != 'section') {
    return;
  }

  if (!isset($form_state['triggering_element'])) {
    // Add term page into tab.
    $form['ding_sections']['term_panel'] = array(
      '#type' => 'fieldset',
      '#title' => t('Term page'),
      '#group' => 'section_tabs',
    );
    $form['field_term_page']['#disabled'] = TRUE;

    $form['ding_sections']['term_panel']['field_term_page'] = $form['field_term_page'];
    unset($form['field_term_page']);
  }
}
