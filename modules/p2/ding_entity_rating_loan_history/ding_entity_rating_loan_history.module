<?php

/**
 * @file
 * Handle rating of recent loans.
 */

define('DING_ENTITY_RATING_LOAN_HISTORY_MAX_AMOUNT', 5);

/**
 * Implements hook_ding_interaction_info().
 */
function ding_entity_rating_loan_history_ding_interaction_info() {
  $active = ding_user_consent_has_consent('loan_history_store');
  $previous_loans = "user";

  return array(
    'title' => t('Rate your previous loans'),
    'description' => t('Present historical non rated loans to the user ' .
      'and request the user to rate them in order to get better serendipity.'),
    'active' => $active,
    'more_title' => t('Lookup your previous loans'),
    'more_url' => $previous_loans,
  );
}

/**
 * Implements hook_ding_interaction_view().
 */
function ding_entity_rating_loan_history_ding_interaction_view($count = DING_ENTITY_RATING_LOAN_HISTORY_MAX_AMOUNT) {
  global $user;
  if (ding_user_is_provider_user($user)) {
    // Get entities to rate based on loan history.
    $objects = ding_entity_rating_loan_history_get_suggested_entities($count);
    if (!empty($objects)) {
      $view_objects = array();
      foreach ($objects as $obj) {
        $view_objects[] = ding_entity_view($obj, 'compact');
      }

      $car = array('#theme' => 'ting_carousel', '#objects' => $view_objects);
      return render($car);
    }
  }
  return '';
}

/**
 * Get suggested entities to rate.
 *
 * Retrieve a list of ting entities to rate, based on the users loan history.
 * Ordered by most recently added to the list.
 *
 * @param int $max_count
 *   Number of suggestions to get.
 *
 * @return array
 *   An array of TingObjects.
 */
function ding_entity_rating_loan_history_get_suggested_entities($max_count = DING_ENTITY_RATING_LOAN_HISTORY_MAX_AMOUNT) {
  // Get user loan history.
  $user_history_list = ding_list_get_lists(DING_LIST_TYPE_LOAN_HISTORY);
  $objects = array();

  if (ding_user_consent_has_consent('loan_history_store') && !empty($user_history_list)) {
    $history_list = current($user_history_list);
    $list_elements = ding_list_load_elements($history_list);

    // Newest first.
    // Newer elements have a higher list id, so we sort the array reversely.
    krsort($list_elements);

    foreach ($list_elements as $element) {
      if (count($objects) >= $max_count) {
        break;
      }

      $ting_object_id = ding_list_get_list_element_value($element);

      // Backwards compatibility.
      $obj_id = ding_list_convert_cql($ting_object_id);

      $ting_object = ding_entity_load($obj_id);
      $objects[] = $ting_object;
    }
  }

  return $objects;
}

/**
 * Filter list by previously rated entities.
 *
 * Remove all ids from the supplied array, which correspond with an entity in
 * the users rating list.
 *
 * @param array $ids
 *   An array of TingObject ids.
 *
 * @return array
 *   An array of TingObject ids.
 */
function ding_entity_rating_loan_history_filter_by_rated(array $ids) {
  $list = ding_list_get_list(DING_ENTITY_RATING_LIST);
  foreach ($ids as $key => $id) {
    if (ding_list_has_ding_list_element($list, 'ting_object', $id)) {
      unset($ids[$key]);
    }
  }
  return $ids;
}
