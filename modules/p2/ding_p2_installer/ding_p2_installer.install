<?php

/**
 * @file
 * P2 installation.
 */

/**
 * Implements hook_install().
 *
 * Add Danish p2 translations.
 */
function ding_p2_installer_install() {
  $path = drupal_get_path('module', 'ding_p2_installer');
  $po_file = $path . '/ding_p2_install_da.po';
  $file = new stdClass();
  $file->uri = $po_file;
  $file->filename = basename($po_file); 
  _locale_import_po($file, 'da', LOCALE_IMPORT_KEEP, 'default');
  drupal_set_message('Please run a database update to finish the installation of Personalisering / P2.', 'warning');

  // Make sure the installer is called after all other ding modules.
  // This is needed to make sure P2 page variants override those defined in
  // ding core.
  db_update('system')
    ->fields(array('weight' => 1001))
    ->condition('name', 'ding_p2_installer', '=')
    ->execute();  
  
  // Set an initial value for the schema version so we can run updates after
  // install.
  drupal_set_installed_schema_version('ding_p2_installer', 7000);
}
 
/**
 * Implements hook_update().
 *
 * Inserts ratings and serendipity extra fields on Ting Objects.
 * This installer sets up a default installation for the whole P2 package
 * If you install each P2 module individually we assume you don't want the
 * default installation settings.
 *
 * Load each field group for each display mode,
 * and insert rating and serendipity fields in the correct field groups.
 */
function ding_p2_installer_update_7001() {
  // Default:
  $view_mode = 'default';
  $group = field_group_load_field_group('group_ting_object_right_column', 'ting_object', 'ting_object', $view_mode);
  $group->children[] = 'ding_serendipity_info';
  $group->children[] = 'ding_entity_rating_action';
  $group->children[] = 'ding_entity_rating_result';
  field_group_group_save($group);
  
  // Set row weights for ting objects:
  ding_p2_installer_extra_field_update_weight('ding_serendipity_info', 'ting_object', 'ting_object', $view_mode, 6);
  ding_p2_installer_field_update_weight('ding_entity_rating_action', 'ting_object', 'ting_object', $view_mode, 7);
  ding_p2_installer_field_update_weight('ding_entity_rating_result', 'ting_object', 'ting_object', $view_mode, 8);
  
  ding_p2_installer_field_update_weight('ting_series', 'ting_object', 'ting_object', $view_mode, 9);
  ding_p2_installer_field_update_weight('ting_subjects', 'ting_object', 'ting_object', $view_mode, 10);
  ding_p2_installer_field_update_weight('ding_entity_buttons', 'ting_object', 'ting_object', $view_mode, 11);
  
  // Teaser:
  $view_mode = 'teaser';
  $group = field_group_load_field_group('group_ting_object_teaser_right', 'ting_object', 'ting_object', $view_mode);
  $group->children[] = 'ding_serendipity_info';
  $group->children[] = 'ding_entity_rating_action';
  $group->children[] = 'ding_entity_rating_result';
  field_group_group_save($group);
  
  ding_p2_installer_extra_field_update_weight('ding_serendipity_info', 'ting_object', 'ting_object', $view_mode, 7);
  ding_p2_installer_field_update_weight('ding_entity_rating_action', 'ting_object', 'ting_object', $view_mode, 8);
  ding_p2_installer_field_update_weight('ding_entity_rating_result', 'ting_object', 'ting_object', $view_mode, 9);
  
  // Search result:
  $view_mode = 'search_result';
  $group = field_group_load_field_group('group_ting_right_col_search', 'ting_object', 'ting_object', $view_mode);
  $group->children[] = 'ding_entity_rating_action';
  $group->children[] = 'ding_entity_rating_result';
  field_group_group_save($group);
  
  ding_p2_installer_extra_field_update_weight('ding_serendipity_info', 'ting_object', 'ting_object', $view_mode, 0, FALSE);
  ding_p2_installer_field_update_weight('ding_entity_rating_action', 'ting_object', 'ting_object', $view_mode, 20);
  ding_p2_installer_field_update_weight('ding_entity_rating_result', 'ting_object', 'ting_object', $view_mode, 21);
  
  // Compact:
  $view_mode = 'compact';
  ding_p2_installer_field_update_weight('ting_cover', 'ting_object', 'ting_object', $view_mode, 0);
  ding_p2_installer_field_update_weight('ting_title', 'ting_object', 'ting_object', $view_mode, 1);
  ding_p2_installer_field_update_weight('ding_entity_rating_action', 'ting_object', 'ting_object', $view_mode, 2);
  ding_p2_installer_field_update_weight('ding_entity_rating_result', 'ting_object', 'ting_object', $view_mode, 3);
  ding_p2_installer_extra_field_update_weight('ding_serendipity_info', 'ting_object', 'ting_object', $view_mode, 4, FALSE);  
  
  // Set row weights for taxonomy terms:
  $view_mode = 'teaser';
  ding_p2_installer_extra_field_update_weight('description', 'taxonomy_term', 'ding_content_tags', $view_mode, 0, FALSE);
  
  // Set default values for ding_serendipity config:
  $defaults = array(
    'ding_entity_rating_materials_by_rating' => 'ding_entity_rating_materials_by_rating',
    'ding_interests_materials' => 'ding_interests_materials',
    'ding_interests_nodes_by_bundle' => 'ding_interests_nodes_by_bundle',
    'ding_serendipity_fallback_ting_object' => 'ding_serendipity_fallback_ting_object',
    'ding_serendipity_lists_ting_objects_adhr' => 'ding_serendipity_lists_ting_objects_adhr',
    'ding_serendipity_lists_ting_objects_adhl' => 'ding_serendipity_lists_ting_objects_adhl',
    'ding_serendipity_lists_frontpage_search' => 'ding_serendipity_lists_frontpage_search',
    'ding_serendipity_lists_loan_adhl' => 'ding_serendipity_lists_loan_adhl',
    'ding_serendipity_lists_author_from_lists' => 'ding_serendipity_lists_author_from_lists',
    'ding_serendipity_site_field_related_material' => 'ding_serendipity_site_field_related_material',
    'ding_serendipity_site_field_related_content' => 'ding_serendipity_site_field_related_content',
    'ding_serendipity_taxonomy_term_recent' => 'ding_serendipity_taxonomy_term_recent',
    'ding_serendipity_taxonomy_term_related_by_term' => 'ding_serendipity_taxonomy_term_related_by_term',
    'ding_serendipity_taxonomy_term_recommended_objects' => 'ding_serendipity_taxonomy_term_recommended_objects',
    'ding_serendipity_taxonomy_term_popular_objects' => 'ding_serendipity_taxonomy_term_popular_objects',
    'ding_serendipity_ting_entity_ting_object_author' => 'ding_serendipity_ting_entity_ting_object_author',
    'ding_serendipity_ting_entity_ting_object_subject' => 'ding_serendipity_ting_entity_ting_object_subject',
    'ding_serendipity_ting_entity_ting_object_type' => 'ding_serendipity_ting_entity_ting_object_type',
    'ding_serendipity_ting_entity_ting_object_adhl' => 'ding_serendipity_ting_entity_ting_object_adhl',
    'ding_serendipity_ting_entity_ting_object_adhr' => 'ding_serendipity_ting_entity_ting_object_adhr',
    'ding_serendipity_ting_entity_ting_object_openlist_adhl' => 'ding_serendipity_ting_entity_ting_object_openlist_adhl',
    'ding_entity_rating' => 0,
    'ding_interests' => 0,
    'ding_serendipity_fallback' => 0,
    'ding_serendipity_lists' => 0,
    'ding_serendipity_lists_followed_terms_nodes' => 0,
    'ding_serendipity_lists_followed_terms_ting_objects' => 0,
    'ding_serendipity_site' => 0,
    'ding_serendipity_taxonomy_term' => 0,
    'ding_serendipity_ting_entity' => 0,
  );
  variable_set('ding_serendipity_callbacks', $defaults);
  
  // Set default values for ding_interaction:
  $defaults = array(
    'ding_entity_rating_loan_history' => 'ding_entity_rating_loan_history',
    'ding_interaction_manual' => 'ding_interaction_manual',
    'ding_interests' => 'ding_interests',
    'ding_interests_by_history' => 'ding_interests_by_history',
    'ding_user_complete' => 'ding_user_complete',
    'ding_user_consent' => 'ding_user_consent',
  );
  variable_set('ding_interaction_callbacks', $defaults);
  
  // Set default values for ding_user_complete:
  $defaults = array(
    'ding_entity_rating' => 'ding_entity_rating',
    'ding_interests' => 'ding_interests',
    'ding_list_created_list' => 'ding_list_created_list',
    'ding_list_following_author' => 'ding_list_following_author',
    'ding_list_following_search' => 'ding_list_following_search',
  );
  variable_set('ding_user_complete_callbacks', $defaults);
  
  // Set ding_frontpage to use serendipity:
  variable_set('ding_frontpage_promoter', 'serendipity');
  
  // Activate user consent by default:
  variable_set('user_consent_activate', TRUE);
  
  // Clear the field group cache after updates.
  cache_clear_all('field_groups', 'cache_field');
}
