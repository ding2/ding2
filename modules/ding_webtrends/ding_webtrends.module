<?php
/**
 * @file
 * Adds the web-trends tracking code to the site.
 */

/**
 * Implements hook_menu().
 */
function ding_webtrends_menu() {
  $items = array();

  $items['admin/config/ding/webtrends'] = array(
    'title' => 'WebTrends',
    'description' => 'Settings for the WebTrends analytics tool.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ding_webtrends_admin_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'ding_webtrends.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_page_alter().
 */
function ding_webtrends_page_alter(&$page) {
  // Load webtrend script.
  // Should be loaded after the inline-configuration
  if (variable_get('preprocess_js', FALSE)) {
    // Aggregate JS, load minified version.
    drupal_add_js(drupal_get_path('module', 'ding_webtrends') . '/js/webtrends.min.js', array('scope' => 'footer'));
  }
  else {
    drupal_add_js(drupal_get_path('module', 'ding_webtrends') . '/js/webtrends.js', array('scope' => 'footer'));
  }

  // Get configuration variables set in the administration interface.
  $domain = variable_get('webtrends_domain', FALSE);
  $dcs_id = variable_get('webtrends_dcs_id', FALSE);
  $onsitedoms = variable_get('webtrends_onsitedoms', NULL);

  // Check that webtrends have been configured.
  if (!$domain || !$dcs_id) {
    watchdog('ding_webtrends', 'Ding Webtrends module not configured.', array(), WATCHDOG_NOTICE);
    return;
  }

  // Create custom inline script.
  $script = <<<EOT
window.webtrendsAsyncInit=function(){
    var dcs=new Webtrends.dcs().init({
        dcsid:"$dcs_id",
        domain:"statse.webtrendslive.com",
        timezone:1,
        i18n:true,
        adimpressions:true,
        adsparam:"WT.ac",
        offsite:true,
        download:true,
        downloadtypes:"avi,csv,doc,docx,exe,gzip,mp3,mp4,pdf,ppt,pptx,rar,txt,wav,xls,xlsx,zip",
        onsitedoms:"$onsitedoms",
        fpcdom:".$domain",
        plugins:{
            hm:{src:"//s.webtrends.com/js/webtrends.hm.js"},
            facebook:{src:"//s.webtrends.com/js/webtrends.fb.js"},
            yt:{src:"//s.webtrends.com/js/webtrends.yt.js"}
        }
        }).track();
};
EOT;

  drupal_add_js($script, array(
    'type' => 'inline',
  ));

  // Fallback HTML if JS is not enabled.
  $html = <<<EOT
<noscript><div>
<img alt="dcsimg" id="dcsimg" width="1" height="1" src="//statse.webtrendslive.com/$dcs_id/njs.gif?dcsuri=/nojavascript&amp;WT.js=No&amp;WT.tv=10.4.1&amp;dcssip=$domain"/>
</div></noscript>
EOT;

  $page['page_bottom']['webtrends'] = array(
    '#type' => 'markup',
    '#markup' => $html,
  );

  // Check to see if a search needs to be tracked.
  if ($search_info = ding_webtrends_get_search_info()) {
    $meta_tag['#tag'] = 'meta';
    $meta_tag['#attributes'] = array(
      'name' => 'WT.oss',
      'content' => $search_info['type'] . ':' . $search_info['search_key'],
    );
    drupal_add_html_head($meta_tag, 'search_query_meta_tag');
    $meta_tag['#attributes'] = array(
      'name' => 'WT.oss_r',
      'content' => $search_info['count'],
    );
    drupal_add_html_head($meta_tag, 'search_count_meta_tag');
  }

  // Add JavaScript for tracking certain link buttons via webtrends.
  drupal_add_js(drupal_get_path('module', 'ding_webtrends') . '/js/webtrends_add.js');
}

/**
 * Implements hook_panels_pane_content_alter().
 */
function ding_webtrends_panels_pane_content_alter($content, $pane, $args, $contexts) {
  if ($pane->type == 'search_result' && $pane->configuration['type'] == 'ting_search') {
    if ($search_result = ting_search_current_results()) {
      $search_key = $search_result->getSearchRequest()->getFullTextQuery();
      $count = $search_result->getNumTotalObjects();
      ding_webtrends_set_search_info($search_key, $count, 'ting_search');
    }
  }
}

/**
 * Implemenents hook_views_post_execute().
 */
function ding_webtrends_views_post_execute(&$view) {
  if ($view->name == 'ding_multiple_search') {
    $count = $view->total_rows;
    $search_key = array_shift($view->args);
    ding_webtrends_set_search_info($search_key, $count, 'node');
  }
}

/**
 * Set info about a search has been performed for later use in page building.
 */
function ding_webtrends_set_search_info($search_key, $count, $type) {
  $search_info = &drupal_static(__FUNCTION__);
  $search_info = array(
    'search_key' => $search_key,
    'count' => $count,
    'type' => $type,
  );
}

/**
 * Helper function to get info about a performed search.
 */
function ding_webtrends_get_search_info() {
  return drupal_static('ding_webtrends_set_search_info', FALSE);
}

/**
 * Implements hook_preprocess_ding_list_add_button().
 *
 * The ding list add buttons is AJAX-enabled and we want to track those with
 * dcsMultiTrack. Unfortunately, the standard classes is not enough to make the
 * selector specific enough, so we add our own here.
 */
function ding_webtrends_preprocess_ding_list_add_button(&$variables) {
  $links = &$variables['buttons']['#links'];
  foreach ($links as $key => $link) {
    // We only want to track dinglist attach buttons that are AJAX-enabled
    if (strpos($link['href'], 'dinglist/attach') === 0 && in_array('use-ajax', $link['attributes']['class'])) {
      $links[$key]['attributes']['class'][] = 'ding-webtrends-track';
    }
  }
}
