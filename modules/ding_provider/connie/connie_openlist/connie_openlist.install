<?php

/**
 * @file
 * Install, update and uninstall functions for the ding_provider module.
 */

/**
 * Implements hook_install().
 */
function connie_openlist_install() {
  // We need to increase our weight to override ting_openlist.
  db_update('system')
    ->fields(array('weight' => 10))
    ->condition('name', 'connie_openlist', '=')
    ->execute();
}

/**
 * Implements hook_schema().
 */
function connie_openlist_schema() {
  $schema = array(
    'connie_openlist_lists' => array(
      'description' => 'Stores lists.',
      'fields' => array(
        'list_id' => array(
          'description' => 'Primary key: List id.',
          'type' => 'serial',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        'owner' => array(
          'type' => 'varchar',
          'length' => 256,
          'not null' => TRUE,
          'default' => '',
          'description' => 'Openlist user ID.',
        ),
        'title' => array(
          'type' => 'varchar',
          'length' => 256,
          'not null' => TRUE,
          'default' => '',
          'description' => 'List name.',
        ),
        'type' => array(
          'type' => 'varchar',
          'length' => 256,
          'not null' => TRUE,
          'default' => '',
          'description' => 'List type.',
        ),
        'created' => array(
          'description' => 'Created.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
        'modified' => array(
          'description' => 'Last change.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
        'status' => array(
          'description' => 'Whether this list is active.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 1,
        ),
        'data' => array(
          'type' => 'blob',
          'not null' => FALSE,
          'size' => 'big',
          'serialize' => TRUE,
          'description' => 'List data.',

        ),
      ),
      'primary key' => array('list_id'),
      'indexes' => array(
        'owner' => array('owner'),
      ),
    ),
    'connie_openlist_list_items' => array(
      'description' => 'Stores list items.',
      'fields' => array(
        'element_id' => array(
          'description' => 'Primary key: List item id.',
          'type' => 'serial',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        'list_id' => array(
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
          'description' => "Lists {connie_openlist_lists}.lid.",
        ),
        'previous' => array(
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
          'description' => "Previous element(?).",
        ),
        'weight' => array(
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
          'description' => "Weight in list.",
        ),
        'type' => array(
          'type' => 'varchar',
          'length' => 256,
          'not null' => TRUE,
          'default' => '',
          'description' => 'List type.',
        ),
        'created' => array(
          'description' => 'Created.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
        'modified' => array(
          'description' => 'Last change.',
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
        ),
        'data' => array(
          'type' => 'blob',
          'not null' => FALSE,
          'size' => 'big',
          'serialize' => TRUE,
          'description' => 'List item data.',
        ),
      ),
      'primary key' => array('element_id'),
      'indexes' => array(
        'list_id' => array('list_id'),
      ),
    ),
  );

  return $schema;
}
