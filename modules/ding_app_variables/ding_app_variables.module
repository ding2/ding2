<?php

/**
 * @file
 * Define modules hooks.
 */

/**
 * Implements hook_menu().
 */
function ding_app_variables_menu() {
  $items = [];

  $items['ding/variables'] = [
    'title' => 'Display variables as JSON output',
    'access callback' => TRUE,
    'delivery callback' => 'drupal_json_output',
    'page callback' => 'ding_app_variables_display',
  ];

  return $items;
}

/**
 * Provide variables to the json output.
 *
 * @return array
 *   List of all variables to the output.
 */
function ding_app_variables_display() {
  $carousel_configs[] = _ding_app_variables_get_carousel_configs();

  $variables = [
    'opensearch_search_profile',
    'ting_search_results_per_page',
    'opensearch_url',
    'opensearch_sort_default',
    'opensearch_ranking_custom',
    'opensearch_ranking_fields',
    'opensearch_boost_fields',
    'ting_agency',
  ];
  $variables_configs = [];
  foreach ($variables as $variable) {
    $variables_configs[$variable] = variable_get($variable, '');
  }

  $menu_items = _ding_app_variables_main_menu_items();

  return [
    'variables' => $variables_configs,
    'carousels' => $carousel_configs,
    'menu-items' => $menu_items,
  ];
}

/**
 * Get panels configurations.
 *
 * @return array
 *   List of carousels pane configurations.
 */
function _ding_app_variables_get_carousel_configs() {
  $carousels = [];
  $query = db_select('panels_pane', 'pp');
  $query->join('page_manager_handlers', 'pmh', 'pp.did = pmh.did');
  $panes = $query
    ->fields('pp', ['type', 'configuration', 'uuid'])
    ->fields('pmh', ['name', 'subtask'])
    ->condition('pp.type', 'carousel')
    ->condition('pp.subtype', 'carousel')
    ->condition('pp.shown', 1)
    ->execute();

  foreach ($panes as $pane) {
    // Identify front-page carousels as 'carousel' so mobile app is aware of them.
    // Otherwise pick whatever unique combination,
    $key = ('ding_frontpage' === $pane->subtask) ? 'carousel' : $pane->name . '_' . $pane->type;
    $carousels[] = [
      $key => unserialize($pane->configuration),
      'uuid' => $pane->uuid,
    ];
  }

  return $carousels;
}

/**
 * Fetch the 2 levels of items from main menu.
 *
 * @return array
 *   Returns a list of menu items.
 */
function _ding_app_variables_main_menu_items() {
  $items = [];
  $main_menu = menu_tree_all_data('main-menu');

  $pos = 0;
  foreach ($main_menu as $menu_item) {
    $link = $menu_item['link'];
    if ($link['hidden'] !== '1') {
      $items[$pos] = _ding_app_varaibles_menu_item_structure($link);

      if ($link['has_children'] === '1') {
        foreach ($menu_item['below'] as $child) {
          $items[$pos]['childs'][] = _ding_app_varaibles_menu_item_structure($child['link']);
        }
      }
      ++$pos;
    }
  }

  return $items;
}

/**
 * Build exposed menu item.
 *
 * @param array $item
 *   Menu item.
 *
 * @return array
 *   Custom menu item structure.
 */
function _ding_app_varaibles_menu_item_structure(array $item) {
  return [
    'id' => $item['mlid'],
    'title' => $item['title'],
    'href' => $item['href'],
    'weight' => $item['weight'],
  ];
}
