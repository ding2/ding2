<?php

/**
 * @file
 * Installation file for ding_place2book module.
 */

/**
 * Implementation of hook_schema().
 */
function ding_place2book_schema() {
  return array(
    'ding_place2book' => array(
      'description' => 'Table to hold information about Place2Book tickets.',
      'fields' => array(
        'nid' => array(
          'description' => 'The foreign key to {node}.nid',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
        ),
        'place2book_id' => array(
          'description' => 'An ID-reference to the corresponding event on the ticket booking service',
          'type' => 'int',
          'unsigned' => FALSE,
          'not null' => TRUE,
          'default' => 0,
        ),
        'capacity' => array(
          'description' => 'The maximum capacity on the Place2Book event. 0 is interpreted as unlimited capacity on the event (default)',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
        'maintain_copy' => array(
          'description' => 'Event is created and updated on Place2Book',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 1,
        ),
        'kultunaut_export' => array(
          'description' => 'Place2Book forwards the event to kultunaut',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
        'passive' => array(
          'description' => 'Event on Place2Book is flagged as passive',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ),
        'ticket_type' => array(
          'description' => t('Ticket type'),
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
      ),
      'primary key' => array('nid'),
    ),
  );
}

/**
 * Implementation of hook_install().
 */
function ding_place2book_install() {
  // Set 'Maintain copy on Place2Book' as default.
  variable_set('ding_place2book_event_nodes', array('defaults' => array('maintain_copy' => 'maintain_copy')));
  // Update moduel weight to make it heavier then CCK field groups.
  db_query("UPDATE {system} SET weight = 10 WHERE name = 'ding_place2book';");
}

/**
 * Implementation of hook_uninstall().
 */
function ding_place2book_uninstall() {
  variable_del('ding_place2book');
  variable_del('ding_place2book_libraries');
  variable_del('ding_place2book_event_nodes');
}

/**
 * Add column for storing ticket type
 */
function ding_place2book_update_7000() {
  db_add_field('ding_place2book', 'ticket_type', array(
    'type' => 'varchar',
    'length' => 255,
    'not null' => TRUE,
    'default' => '',
    'description' => t('Ticket type'),
  ));
}

/**
 * Update ticket_type in all existing place2book-settings to 'Adgang'.
 */
function ding_place2book_update_7001() {
  $num_upd = db_update('ding_place2book')
    ->fields(array('ticket_type' => 'Adgang'))
    ->execute();
}
