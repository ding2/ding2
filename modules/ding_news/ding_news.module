<?php
/**
 * @file
 * Create news content type and displays.
 */

include_once 'ding_news.features.inc';

/**
 * Implements hook_entity_info_alter().
 */
function ding_news_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['teaser_highlight'] = array(
    'label' => t('Teaser highlight'),
    'custom settings' => TRUE,
  );
}

/**
 * Implements hook_post_features_revert().
 */
function ding_news_post_features_revert() {
  ding_news_install_menu_position('revert');
}

/**
 * Implements hook_post_features_disable_feature().
 */
function ding_news_post_features_disable_feature() {
  ding_news_install_menu_position('delete');
}

/**
 * Implements hook_post_features_enable_feature().
 */
function ding_news_post_features_enable_feature() {
  ding_news_install_menu_position('install');
}

/**
 * Helper function to install menu position rule.
 */
function ding_news_install_menu_position($op = 'install') {
  module_load_include('inc', 'menu_position', 'menu_position.admin');

  // Check if rule exists.
  $exists = db_select('menu_position_rules', 'mpr')
    ->fields('mpr', array('rid'))
    ->condition('admin_title', 'News')
    ->execute()
    ->fetchField();

  if ($exists && $op == 'revert') {
    // The rule exists, so we delete it.
    menu_position_delete_rule($exists);

    // Activate installation of the rule.
    $exists = FALSE;
    $op = 'install';
  }

  if (!$exists && ($op == 'install' || $op == 'revert')) {
    // Define conditions.
    $conditions = array(
      'content_type' => array(
        'content_type' => array(
          'ding_group' => 'ding_news',
        ),
      ),
    );

    // Find the parent element.
    $plid = db_select('menu_links', 'ml')
      ->fields('ml', array('mlid'))
      ->condition('link_path', 'nyheder', '=')
      ->execute()->fetchField();

    // Add the rule.
    if ($plid) {
      menu_position_add_rule(array(
        'admin_title' => 'News',
        'conditions'  => $conditions,
        'menu_name'   => 'main-menu',
        'plid'        => $plid,
      ));
    }
    else {
      watchdog('ding_news', 'Unable to create menu position rule for ding news', array(), WATCHDOG_WARNING);
    }
  }

  if ($exists && $op == 'delete') {
    // The rule exists, so we delete it.
    menu_position_delete_rule($exists);
  }
}

/**
 * Implements hook_preprocess_views_view().
 */
function ding_news_preprocess_views_view(&$vars) {
  $view = $vars['view'];
  // Add a custom view more link for the news list for a group.
  // The standard read more link points to standard news list and it does not
  // seem to be possible to provide a custom url in another way.
  // Adding a link in a footer text field means that the text will not be
  // translatable and the url will not be processed using path alias.
  if ($view->name = 'ding_news' &&
    $view->current_display == 'ding_news_groups_list'
  ) {
    if (!empty($view->result[0]->og_membership_node_gid)) {
      $vars['more'] = theme(
        'views_more',
        array(
          'more_url' => url(
            'temaer/' . $view->result[0]->og_membership_node_gid . '/nyheder'
          ),
          'link_text' => t('See all news'),
        )
      );
    }
  }
}

/**
 * Implements hook_menu().
 */
function ding_news_menu() {
  $items['admin/config/ding/news'] = array(
    'title' => 'Ding news settings',
    'description' => 'Administer news settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ding_news_admin_setting_form'),
    'access arguments' => array('administer news settings'),
    'file' => 'ding_news.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function ding_news_permission() {
  return array(
    'administer news settings' => array(
      'title' => t('Administer news settings'),
    ),
  );
}

/**
 * Implements hook_pre_build().
 */
function ding_news_views_pre_build(&$view) {
  switch ($view->name . ' ' . $view->current_display) {
    case 'ding_news ding_news_list':
      $view->items_per_page = variable_get('ding_news_list_items_per_page', 10);
      break;
  }
}
