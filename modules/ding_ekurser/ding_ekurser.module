<?php
/**
 * @file
 * Code for the Ding eKurser feature.
 */

// Path of panel page. Remember to change this constant if the panel changes.
use Ting\Search\TingSearchFacet;
use Ting\Search\TingSearchFacetTerm;
use Ting\Search\TingSearchSort;

define('DING_EKURSER_PATH', 'ekurser');

include_once 'ding_ekurser.features.inc';

/**
 * Implements hook_form_alter().
 *
 * Replace the facetbrowser with a custom subjectbrowser.
 * Also hide certain fields via css.
 */
function ding_ekurser_form_alter(&$form, &$form_state, $form_id) {
  // Only alter the ekurser facetbrowser.
  if ($form_id != 'ding_facetbrowser_form' || strpos($form['#action'], '/' . DING_EKURSER_PATH) !== 0) {
    return;
  }

  // Remove all facets from the form, so we can add a custom subjectbrowser.
  foreach ($form as $form_key => $form_val) {
    if (strpos($form_key, 'facet.') === 0) {
      unset($form[$form_key]);
    }
  }

  // Add subjectbrowsers headline to the form.
  $form['subjects_begin'] = array(
    '#markup' => '<h2 class="sub-menu-title">' . t('Popular subjects') . '</h2><ul class="sub-menu">',
  );

  // Query most popular subject terms.
  $terms = _ding_ekurser_get_subject_terms();

  // Get current term from the URI.
  $current_term = '';
  $request_uri = rawurldecode(request_uri());
  if (preg_match('/facet\.subject:([^\&]*)/', $request_uri, $match)) {
    if (array_key_exists($match[1], $terms)) {
      $current_term = $match[1];
    }
  }

  // Build the subjectbrowsers links.
  foreach ($terms as $term => $count) {

    // Create options for the link.
    $options = array(
      'query' => array(),
      'html' => TRUE,
    );

    // Add subject to the link.
    if ($term != t('All')) {
      $options['query']['facets[]'] = 'facet.subject:' . $term;
    }

    // Create the link.
    $link = l($term . ' <span class="count">(' . $count . ')</span>', DING_EKURSER_PATH, $options);

    // Remove 'active' class from the link, except for the current chosen term.
    if ($term != $current_term && !($term == t('All') && !$current_term)) {
      $link = preg_replace('/(class\s*="[^"]*?)(?:\bactive\b\s*)*(")/', '$1$2', $link);
    }

    // Add link to the form.
    $form[$term] = array(
      '#markup' => '<li>' . $link . '</li>',
    );
  }

  // Add subjectbrowsers footer to the form.
  $form['subjects_end'] = array(
    '#markup' => '</ul>',
  );

  // Add css to adjust the searchresult and subjectbrowser.
  drupal_add_css(drupal_get_path('module', 'ding_ekurser') . '/css/ding_ekurser.css', 'file');
}

/**
 * Query ting for 'ekurser.nu', and return top 20 terms from 'facet.subject'.
 *
 * Ignore terms that cover more than 80% of the total resultset.
 */
function _ding_ekurser_get_subject_terms() {
  $search_result = ting_start_query()
    ->withFullTextQuery('ekurser.nu')
    ->withCount(1)
    ->withSort('acquisitionDate_descending')
    ->withTermsPrFacet(20)
    ->execute();

  // Extract subject facets.
  $facets = $search_result->getFacets();
  $subject_facets = array_filter($facets, function (TingSearchFacet $facet) {
    return $facet->getName() == 'facet.subject';
  });
  $subject_term_groups = array_map(function (TingSearchFacet $facet) {
    return $facet->getTerms();
  }, $subject_facets);
  $subject_terms = array_merge(...$subject_term_groups);

  // Remove terms that covers more than 80% of the resultset.
  $frequent_subject_terms = array_filter(
    $subject_terms,
    function(TingSearchFacetTerm $term) use ($search_result) {
      return $term->getCount() < 0.8 * $search_result->getNumTotalObjects();
    });

  // Return remaining terms and their count, plus the term 'All'.
  $terms = [];
  foreach ($frequent_subject_terms as $term) {
    /* @var TingSearchFacetTerm $term */
    $terms[$term->getName()] = $term->getCount();
  }
  return array_merge(array(t('All') => $search_result->getNumTotalObjects()), $terms);
}

/**
 * Implements hook_search_info().
 */
function ding_ekurser_search_info() {
  return array(
    'title' => t('Ding eKurser'),
    'conditions_callback' => 'ding_ekurser_conditions_callback',
  );
}

/**
 * Implements hook_search_execute().
 *
 * We don't make our own search, but call ting_search.
 */
function ding_ekurser_search_execute($keys = NULL, $conditions = NULL) {
  return ting_search_search_execute($keys, $conditions);
}

/**
 * Search conditions callback.
 *
 * Use ting_search's conditions callback and add default sort.
 *
 * @return array
 *   Array of search conditions (keys, size, sort)
 */
function ding_ekurser_conditions_callback($keys) {
  $conditions = ting_search_conditions_callback($keys);
  if (empty($conditions['sort'])) {
    $conditions['sort'] = 'acquisitionDate_descending';
  }
  return $conditions;
}

/**
 * Set default sort options.
 *
 * @return array
 *   Returns an array of sort options.
 */
function ding_ekurser_search_sort_options() {
  $options = array(
    'title_ascending' => t('Title (Ascending)'),
    'title_descending' => t('Title (Descending)'),
    'acquisitionDate_ascending' => t('Acquisition date (Ascending)'),
    'acquisitionDate_descending' => t('Acquisition date (Descending)'),
  );

  // Add label to the front of the options.
  foreach ($options as $key => $option) {
    $options[$key] = t('Sort by: !sort', array('!sort' => $option));
  }

  return $options;
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Change sort options when we're on the overview of eKurser.
 */
function ding_ekurser_form_ting_search_sort_form_alter(&$form, &$form_state, $form_id) {
  if (strpos($form['#action'], '/' . DING_EKURSER_PATH) !== 0) {
    return;
  }

  // Set our own sorting options and set default sort, if it's not set.
  $form['sort']['#options'] = ding_ekurser_search_sort_options();
  if (empty($form['sort']['#default_value'])) {
    $form['sort']['#default_value'] = 'acquisitionDate_descending';
  }
}

/**
 * Implements hook_ding_facetbrowser().
 *
 * This function is necessary, because the facetbrowser is called by the name
 * of the panel page. So in order to be able to call the panel page
 * ding_ekurser, we need this function even though we're jus calling the
 * ding facetbrowser.
 */
function ding_ekurser_ding_facetbrowser() {
  return ting_search_ding_facetbrowser();
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Hide the ding_ekurser search from search backends.
 *
 * It shouldn't be possible for users to search using this backend as it's only
 * useful for the overview of e-courses.
 */
function ding_ekurser_form_ting_search_backend_engines_form_alter(&$form, &$form_state, $form_id) {
  unset($form['backends']['searches']['#options']['ding_ekurser']);
}
