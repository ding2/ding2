<?php
/**
 * @file
 * Represents definition of DB schema and all installation tasks.
 */

/**
 * Implements hook_install().
 */
function ding_event_subscriptions_install() {
  ding_event_subscriptions_add_panes();
}

/**
 * Implements hook_uninstall().
 */
function ding_event_subscriptions_uninstall() {
  ding_event_subscriptions_remove_panes();
}

/**
 * Helper function for adding pane to specific pages.
 */
function ding_event_subscriptions_add_panes() {
  $settings = array(
    array(
      'task' => page_manager_get_task('term_view'),
      'name' => 'term_view_panel_context',
      'subtask' => '',
      'position' => 2,
      'region' => 'main_content',
    ),
    array(
      'task' => page_manager_get_task('node_view'),
      'name' => 'node_view_panel_context_3',
      'subtask' => '',
      'position' => 2,
      'region' => 'main_content',
    ),
    array(
      'task' => page_manager_get_task('page'),
      'name' => 'page_ding_events_panel_context',
      'subtask' => 'ding_events',
      'position' => 2,
      'region' => 'main_content',
    ),
    array(
      'task' => page_manager_get_task('page'),
      'name' => 'page_ding_events_library_panel_context',
      'subtask' => 'ding_events_library',
      'position' => 2,
      'region' => 'main_content',
    ),
  );

  ctools_include('plugins');
  ctools_get_plugins('page_manager', 'task_handlers', 'panel_context');
  foreach ($settings as $setting) {
    $handler = page_manager_load_task_handler($setting['task'], $setting['subtask'], $setting['name']);
    $display = panels_panel_context_get_display($handler);

    $pane = new stdClass();
    $pane->pid = 'new-05a7891f-60a5-4df6-9537-ac832dd3fdbd';
    $pane->panel = 'main_content';
    $pane->type = 'des_subscribe';
    $pane->subtype = 'des_subscribe';
    $pane->shown = TRUE;
    $pane->access = array();
    $pane->configuration = array();
    $pane->cache = array();
    $pane->style = array(
      'settings' => NULL,
    );
    $pane->css = array();
    $pane->extras = array();
    $pane->position = $setting['position'];
    $pane->locks = array();
    $pane->uuid = '05a7891f-60a5-4df6-9537-ac832dd3fdbd';
    $display->content['new-05a7891f-60a5-4df6-9537-ac832dd3fdbd'] = $pane;
    $original = $display->panels['main_content'];
    array_splice($original, $setting['position'], 0, 'new-05a7891f-60a5-4df6-9537-ac832dd3fdbd');
    $display->panels['main_content'] = $original;
    $display->hide_title = PANELS_TITLE_PANE;
    $display->title_pane = '0';
    $handler->conf['display'] = $display;
    page_manager_save_task_handler($handler);
  }
}

/**
 * Helper function for removing pane to specific pages.
 */
function ding_event_subscriptions_remove_panes() {
  $settings = array(
    array(
      'task' => page_manager_get_task('term_view'),
      'name' => 'term_view_panel_context',
      'subtask' => '',
      'position' => 2,
      'region' => 'main_content',
    ),
    array(
      'task' => page_manager_get_task('node_view'),
      'name' => 'node_view_panel_context_3',
      'subtask' => '',
      'position' => 2,
      'region' => 'main_content',
    ),
    array(
      'task' => page_manager_get_task('page'),
      'name' => 'page_ding_events_panel_context',
      'subtask' => 'ding_events',
      'position' => 2,
      'region' => 'main_content',
    ),
    array(
      'task' => page_manager_get_task('page'),
      'name' => 'page_ding_events_library_panel_context',
      'subtask' => 'ding_events_library',
      'position' => 2,
      'region' => 'main_content',
    ),
  );

  ctools_include('plugins');
  ctools_get_plugins('page_manager', 'task_handlers', 'panel_context');
  foreach ($settings as $setting) {
    $handler = page_manager_load_task_handler($setting['task'], $setting['subtask'], $setting['name']);
    $display = panels_panel_context_get_display($handler);
    $display->content = array_filter($display->content, function ($i) {
      return $i->type != 'des_subscribe';
    });
    unset($display->panels['main_content'][$setting['position']]);
    $handler->conf['display'] = $display;
    page_manager_save_task_handler($handler);
  }
}
